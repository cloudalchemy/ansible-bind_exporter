---
- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This module only works with systemd"

- name: Naive assertion of proper listen address
  assert:
    that:
      - "':' in bind_exporter_web_listen_address"

- name: Check if bind_exporter is installed
  stat:
    path: "/usr/local/bin/bind_exporter"
  register: __bind_exporter_is_installed
  check_mode: false
  tags:
    - bind_exporter_install

- name: Gather currently installed bind_exporter version (if any)
  command: "/usr/local/bin/bind_exporter --version"
  args:
    warn: false
  changed_when: false
  register: __bind_exporter_current_version_output
  check_mode: false
  when: __bind_exporter_is_installed.stat.exists
  tags:
    - bind_exporter_install
    - skip_ansible_lint

- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/prometheus-community/bind_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
      register: __bind_exporter_latest_release
      until: __bind_exporter_latest_release.status == 200
      retries: 5

    - name: "Set bind_exporter version to {{ __bind_exporter_latest_release.json.tag_name[1:] }}"
      set_fact:
        bind_exporter_version: "{{ __bind_exporter_latest_release.json.tag_name[1:] }}"
  when:
    - bind_exporter_version == "latest"
    - bind_exporter_binary_local_dir | length == 0
  delegate_to: localhost
  run_once: true

- block:
    - name: Get checksum list from github
      set_fact:
        __bind_exporter_checksums: "{{ lookup('url', 'https://github.com/prometheus-community/bind_exporter/releases/download/v' + bind_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
      run_once: true

    - name: "Get checksum for {{ go_arch }} architecture"
      set_fact:
        __bind_exporter_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ __bind_exporter_checksums }}"
      when:
        - "('linux-' + go_arch + '.tar.gz') in item"
  delegate_to: localhost
  when:
    - bind_exporter_binary_local_dir | length == 0
